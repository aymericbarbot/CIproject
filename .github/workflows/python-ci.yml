name: CI Workflow

on:
  push:
    branches: [dev]

# Autorise le token automatique à écrire dans le dépôt
permissions:
  contents: write

jobs:
  # ---------------------------------------------------
  # 1. Compilation & tests
  # ---------------------------------------------------
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  # ---------------------------------------------------
  # 2. Promotion dev ➜ main (uniquement si les tests passent)
  # ---------------------------------------------------
  promote-to-main:
    needs: build-and-test
    if: ${{ needs.build-and-test.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fast-forward main depuis dev
        run: |
          git fetch origin dev            # assure d'avoir la branche à jour
          git checkout main
          git merge --ff-only origin/dev  # fast-forward simple
          git push origin main            # push via GITHUB_TOKEN

  # ---------------------------------------------------
  # 3. Gestion d'échec : isolement du commit fautif & reset dev
  # ---------------------------------------------------
  handle-failure:
    needs: build-and-test
    if: ${{ needs.build-and-test.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Branch off failing commit and reset dev
        run: |
          FAILED_SHA=${{ github.sha }}            # commit qui vient d’échouer
          TIMESTAMP=$(date +%s)
          FAILURE_BRANCH="failures/$TIMESTAMP"

          # 1. crée la branche d’erreur sur le commit fautif
          git checkout -b "$FAILURE_BRANCH" "$FAILED_SHA"
          git push origin "$FAILURE_BRANCH"

          # 2. remet dev à l’état précédent le push (avant le commit fautif)
          PREVIOUS_SHA=${{ github.event.before }}
          git push --force origin "$PREVIOUS_SHA":refs/heads/dev
