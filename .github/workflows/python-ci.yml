name: CI Workflow

on:
  push:
    branches: [dev]

# Le token doit pouvoir pousser dans le dépôt
permissions:
  contents: write           # GitHub Actions peut écrire (push)

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # on aura besoin de l’historique complet plus tard

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  promote-to-main:          # → s’exécute UNIQUEMENT si les tests sont verts
    needs: build-and-test
    if: ${{ needs.build-and-test.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Fast-forward main
        run: |
          # pousse le SHA de dev sur main (fast-forward)
          git push \
            https://x-access-token:${{ secrets.PAT_COURCI }}@github.com/LouisBrousse/courCI.git \
            refs/heads/dev:refs/heads/main

  handle-failure:           # → s’exécute UNIQUEMENT si les tests sont rouges
    needs: build-and-test
    if: ${{ needs.build-and-test.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Branch off failing commit and reset dev
        run: |
          FAILED_SHA=${{ github.sha }}            # commit qui vient d’échouer
          TIMESTAMP=$(date +%s)
          FAILURE_BRANCH="failures/$TIMESTAMP"

          # 1. crée la branche d’erreur sur le commit fautif
          git checkout -b "$FAILURE_BRANCH" "$FAILED_SHA"
          git push \
            https://x-access-token:${{ secrets.PAT_COURCI }}@github.com/LouisBrousse/courCI.git \
            "$FAILURE_BRANCH"

          # 2. remet dev à l’état précédent le push (avant le commit fautif)
          PREVIOUS_SHA=${{ github.event.before }}
          git push --force \
            https://x-access-token:${{ secrets.PAT_COURCI }}@github.com/LouisBrousse/courCI.git \
            "$PREVIOUS_SHA":refs/heads/dev