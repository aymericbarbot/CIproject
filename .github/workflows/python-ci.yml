name: CI Workflow

on:
  push:
    branches: [dev]

# Autorise le token GITHUB_TOKEN à écrire
permissions:
  contents: write

jobs:
  # ===================================================
  # 1. Build & tests
  # ===================================================
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: pytest

  # ===================================================
  # 2. Fast‑forward main si les tests réussissent
  # ===================================================
  promote-to-main:
    needs: build-and-test
    if: ${{ needs.build-and-test.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fast-forward main depuis dev
        run: |
          git fetch origin dev
          git checkout main
          git merge --ff-only origin/dev
          git push origin main

  # ===================================================
  # 3. Branch "failures/…" & reset dev si les tests échouent
  # ===================================================
  handle-failure:
    needs: build-and-test
    # failure() → ce job s'exécute uniquement si *au moins* un job précédent a échoué
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Branch off failing commit & reset dev
        env:
          FAILED_SHA: ${{ github.sha }}
          PREVIOUS_SHA: ${{ github.event.before }}
        run: |
          TIMESTAMP=$(date +%s)
          FAILURE_BRANCH="failures/$TIMESTAMP"

          # 1. Sauvegarder le commit fautif
          git fetch origin
          git checkout -b "$FAILURE_BRANCH" "$FAILED_SHA"
          git push origin "$FAILURE_BRANCH"

          # 2. Réinitialiser la branche dev à l'état précédent le push
          git push --force origin "$PREVIOUS_SHA":refs/heads/dev
