name: CI-dev

on:
  push:
    branches:
      - dev                     # déclenché seulement sur la branche dev

# le jeton GITHUB_TOKEN doit pouvoir écrire dans le dépôt
permissions:
  contents: write

jobs:
  test-and-integrate:
    runs-on: ubuntu-latest
    steps:
      # 1. Récupération complète de l’historique (important pour remettre dev en arrière)
      - name: Checkout (history = 0)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Préparation de l’environnement (exemple Node – à adapter)
      #    supprime ou remplace ce bloc si tu utilises Maven, Gradle, pytest, etc.
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci            # adapte ici

      # 3. Exécution des tests
      - name: Run tests
        id: tests
        run: npm test          # adapte ici

      # 4. Succès : fast-forward de main
      - name: Fast-forward main
        if: success()          # ne s’exécute que si les tests sont verts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # on pousse le SHA courant en main (fast-forward uniquement)
          git push --ff-only origin HEAD:main

      # 5. Échec : branche failures/<timestamp> + reset de dev
      - name: Handle failure
        if: failure()          # ne s’exécute que si les tests sont rouges
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@users.noreply.github.com"

          # branche d’erreur unique
          FAILURE_BRANCH="failures/$(date +%s)"
          git branch "$FAILURE_BRANCH" "$GITHUB_SHA"
          git push origin "$FAILURE_BRANCH"

          # remise de dev à l’état précédent le push
          PREVIOUS_SHA="${{ github.event.before }}"
          git push --force-with-lease origin "$PREVIOUS_SHA":dev